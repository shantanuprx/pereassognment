apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: zookeeperdeployment
spec:
 replicas: 1
 selector:
  matchLabels:
   appName: zookeeper
 template:
  metadata:
   labels:
    appName: zookeeper
  spec:
   containers:
    - name: zookeeperpods
      image: wurstmeister/zookeeper
      imagePullPolicy: Always
      ports:
       - containerPort: 2181
---

apiVersion: v1
kind: Service
metadata:
 name: zookeeperlb
spec:
 selector:
  appName: zookeeper
 ports:
  - port: 2181
    targetPort: 2181
 type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: kafkadclusterdeployment
spec:
 replicas: 1
 selector:
  matchLabels:
   appName: kafka
 template:
  metadata:
   labels:
    appName: kafka
  spec:
   containers:
    - name: kafkapods
      image: wurstmeister/kafka
      imagePullPolicy: Always
      ports:
       - containerPort: 9092
      env:
      - name: KAFKA_ADVERTISED_HOST_NAME
        valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
      - name: KAFKA_ZOOKEEPER_CONNECT
        value: zookeeperlb.default.svc.cluster.local:2181
      - name: KAFKA_CREATE_TOPICS
        value: "ASSIGNMENT-ORDER-EMAIL-QUEUE:1:1"
---

apiVersion: v1
kind: Service
metadata:
 name: kafkalb
spec:
 selector:
  appName: kafka
 ports:
  - port: 9092
    targetPort: 9092
 type: LoadBalancer